$date
	Wed Apr 30 21:27:59 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_demux1to8 $end
$var wire 2 ! out8 [1:0] $end
$var wire 2 " out7 [1:0] $end
$var wire 2 # out6 [1:0] $end
$var wire 2 $ out5 [1:0] $end
$var wire 2 % out4 [1:0] $end
$var wire 2 & out3 [1:0] $end
$var wire 2 ' out2 [1:0] $end
$var wire 2 ( out1 [1:0] $end
$var reg 2 ) in [1:0] $end
$var reg 3 * sel [2:0] $end
$scope module uut $end
$var wire 2 + in [1:0] $end
$var wire 3 , sel [2:0] $end
$var wire 2 - w2 [1:0] $end
$var wire 2 . w1 [1:0] $end
$var wire 2 / out8 [1:0] $end
$var wire 2 0 out7 [1:0] $end
$var wire 2 1 out6 [1:0] $end
$var wire 2 2 out5 [1:0] $end
$var wire 2 3 out4 [1:0] $end
$var wire 2 4 out3 [1:0] $end
$var wire 2 5 out2 [1:0] $end
$var wire 2 6 out1 [1:0] $end
$scope module dm1 $end
$var wire 2 7 in [1:0] $end
$var wire 1 8 sel $end
$var reg 2 9 out1 [1:0] $end
$var reg 2 : out2 [1:0] $end
$upscope $end
$scope module dm2 $end
$var wire 2 ; in [1:0] $end
$var wire 2 < sel [1:0] $end
$var wire 2 = w2 [1:0] $end
$var wire 2 > w1 [1:0] $end
$var wire 2 ? out4 [1:0] $end
$var wire 2 @ out3 [1:0] $end
$var wire 2 A out2 [1:0] $end
$var wire 2 B out1 [1:0] $end
$scope module dm1 $end
$var wire 2 C in [1:0] $end
$var wire 1 D sel $end
$var reg 2 E out1 [1:0] $end
$var reg 2 F out2 [1:0] $end
$upscope $end
$scope module dm2 $end
$var wire 2 G in [1:0] $end
$var wire 1 H sel $end
$var reg 2 I out1 [1:0] $end
$var reg 2 J out2 [1:0] $end
$upscope $end
$scope module dm3 $end
$var wire 2 K in [1:0] $end
$var wire 1 L sel $end
$var reg 2 M out1 [1:0] $end
$var reg 2 N out2 [1:0] $end
$upscope $end
$upscope $end
$scope module dm3 $end
$var wire 2 O in [1:0] $end
$var wire 2 P sel [1:0] $end
$var wire 2 Q w2 [1:0] $end
$var wire 2 R w1 [1:0] $end
$var wire 2 S out4 [1:0] $end
$var wire 2 T out3 [1:0] $end
$var wire 2 U out2 [1:0] $end
$var wire 2 V out1 [1:0] $end
$scope module dm1 $end
$var wire 2 W in [1:0] $end
$var wire 1 X sel $end
$var reg 2 Y out1 [1:0] $end
$var reg 2 Z out2 [1:0] $end
$upscope $end
$scope module dm2 $end
$var wire 2 [ in [1:0] $end
$var wire 1 \ sel $end
$var reg 2 ] out1 [1:0] $end
$var reg 2 ^ out2 [1:0] $end
$upscope $end
$scope module dm3 $end
$var wire 2 _ in [1:0] $end
$var wire 1 ` sel $end
$var reg 2 a out1 [1:0] $end
$var reg 2 b out2 [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 b
b0 a
0`
b0 _
b0 ^
b0 ]
0\
b0 [
b0 Z
b0 Y
0X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
0L
b0 K
b11 J
b0 I
0H
b11 G
b11 F
b0 E
0D
b11 C
b11 B
b0 A
b0 @
b0 ?
b11 >
b0 =
b0 <
b11 ;
b11 :
b0 9
08
b11 7
b11 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b11 .
b0 -
b0 ,
b11 +
b0 *
b11 )
b11 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#10000
b0 (
b0 6
b0 B
b0 J
b11 '
b11 5
b11 A
b11 I
1H
1L
1\
1`
b1 <
b1 P
b1 *
b1 ,
#20000
b11 &
b11 4
b11 @
b11 N
b0 >
b0 F
b0 G
b11 =
b11 E
b11 K
b0 (
b0 6
b0 B
b0 J
b0 '
b0 5
b0 A
b0 I
1D
0H
0L
1X
0\
0`
b10 <
b10 P
b10 *
b10 ,
#30000
b0 &
b0 4
b0 @
b0 N
b11 %
b11 3
b11 ?
b11 M
1H
1L
1\
1`
b11 <
b11 P
b11 *
b11 ,
#40000
b11 $
b11 2
b11 V
b11 ^
b0 =
b0 E
b0 K
b0 &
b0 4
b0 @
b0 N
b0 %
b0 3
b0 ?
b0 M
b11 R
b11 Z
b11 [
b0 .
b0 :
b0 ;
b0 C
b11 -
b11 9
b11 O
b11 W
0D
0H
0L
0X
0\
0`
18
b0 <
b0 P
b100 *
b100 ,
#50000
b0 $
b0 2
b0 V
b0 ^
b11 #
b11 1
b11 U
b11 ]
1H
1L
1\
1`
b1 <
b1 P
b101 *
b101 ,
#60000
b11 "
b11 0
b11 T
b11 b
b0 R
b0 Z
b0 [
b11 Q
b11 Y
b11 _
b0 $
b0 2
b0 V
b0 ^
b0 #
b0 1
b0 U
b0 ]
1D
0H
0L
1X
0\
0`
b10 <
b10 P
b110 *
b110 ,
#70000
b0 "
b0 0
b0 T
b0 b
b11 !
b11 /
b11 S
b11 a
1H
1L
1\
1`
b11 <
b11 P
b111 *
b111 ,
#80000
